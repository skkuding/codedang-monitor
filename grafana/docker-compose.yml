version: "3.8"

networks:
  loki:

services:
  caddy:
    profiles: ['deploy']
    image: caddy:2.7.6-alpine
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    network_mode: host
    
  loki-test:
    image: grafana/loki:2.9.0
    container_name: loki-test
    ports:
      - "3199:3100"
    volumes:
      - '$PWD/loki-config-test.yml:/etc/loki/loki-config.yml'
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - loki

  loki-stage:
    image: grafana/loki:2.9.0
    container_name: loki-stage
    ports:
      - "3101:3100"
    volumes:
      - '$PWD/loki-config-stage.yml:/etc/loki/loki-config.yml'
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - loki

  loki-aws:
    image: grafana/loki:2.9.0
    container_name: loki-aws
    ports:
      - "3100:3100"
    volumes:
      - '$PWD/loki-config-aws.yml:/etc/loki/loki-config.yml'
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - loki


  grafana:
    image: grafana/grafana:latest
    env_file: 
      - .env
    container_name: grafana
    restart: unless-stopped
      #    environment:
      #      - TERM=linux
      #      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-polystat-panel
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_storage:/var/lib/grafana'
      - '$PWD/grafana.ini:/etc/grafana/grafana.ini'
    networks:
      - loki
  

volumes:
  grafana_storage: {}
