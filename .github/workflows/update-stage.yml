name: Local Deployment

on:
  # push:
  #   branches: main
  workflow_dispatch:
    inputs:
      target:
        description: "배포 대상을 선택하세요 (production, rc, stage)"
        required: true
        default: "stage"
        type: choice
        options:
          - production
          - rc
          - stage
      ref:
        description: "체크아웃할 브랜치, 태그 또는 SHA (비워두면 기본값 main)"
        required: false
        default: "main"
        type: string

jobs:
  deploy:
    runs-on: target-${{ github.event.inputs.target }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || 'main' }}

      - name: Load dotenv from secret for Grafana Configuration
        run: |
          cat <<EOF > .env
          # Sensitive configurations from GitHub Secrets
          GF_SMTP_HOST = ${{ secrets.SMTP_HOST }}
          GF_SMTP_USER = ${{ secrets.SMTP_USER }}
          GF_SMTP_PASSWORD = ${{ secrets.SMTP_PASSWORD }}
          GF_SMTP_FROM_ADDRESS = ${{ secrets.FROM_ADDRESS }}
          MINIO_ROOT_USER = ${{ secrets.MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD = ${{ secrets.MINIO_ROOT_PASSWORD }}
          MS_WEBHOOK_URL = ${{ secrets.MS_WEBHOOK_URL }}
          GH_CLIENT_ID = ${{ secrets.GH_CLIENT_ID }}
          GH_CLIENT_SECRET = ${{ secrets.GH_CLIENT_SECRET }}

          EOF

      - name: Check if caddy container is running
        id: check-caddy-container
        run: |
          {
            echo 'stdout<<EOF'
            docker compose --profile caddy ps -q
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: when caddy container is not running, start caddy container
        if: steps.check-caddy-container.outputs.stdout == ''
        run: >
          docker compose --profile caddy up -d

      - name: Start all containers except for caddy
        run: |
          docker compose --profile log --profile trace --profile metric up -d

      - name: Restart all containers except for caddy
        run: |
          docker compose --profile log --profile trace --profile metric restart

      - name: Update Caddyfile and reload Caddy
        run: |
          # 환경 변수 치환 (로컬 Caddyfile 수정)
          sed -i 's/{$AWS_REQ_IP}/${{secrets.AWS_REQ_IP}}/' ./Caddyfile

          # 컨테이너 내부에서 Caddy 리로드
          docker exec -w /etc/caddy caddy caddy reload
