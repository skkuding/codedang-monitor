version: "3.8"

services:
  caddy:
    profiles: ["caddy"]
    image: caddy:2.7.6-alpine
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    network_mode: host

  minio:
    profiles: ["log", "trace"]
    container_name: minio
    image: minio/minio:latest
    volumes:
      - minio_data_volume:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server data --address ':9000' --console-address ':9001'
    shm_size: "1gb"

  createbuckets:
    profiles: ["log", "trace"]
    image: minio/mc
    volumes:
      - minio_data_volume:/data
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb data/loki-aws;
      /usr/bin/mc mb data/loki-stage;
      /usr/bin/mc mb data/loki-test;
      /usr/bin/mc mb data/tempo;
      /usr/bin/mc anonymous set public data/tempo;
      /usr/bin/mc anonymous set public data/loki-aws;
      /usr/bin/mc anonymous set public data/loki-stage;
      /usr/bin/mc anonymous set public data/loki-test;
      exit 0;
      "

  loki-test:
    profiles: ["log"]
    image: grafana/loki:latest
    container_name: loki-test
    environment:
      - MINIO_ROOT_PASSWORD
      - MINIO_ROOT_USER
    ports:
      - "3199:3100"
    volumes:
      - "$PWD/config/loki/loki-config-test.yml:/etc/loki/loki-config.yml"
    command: -config.file=/etc/loki/loki-config.yml -config.expand-env=true

  loki-stage:
    profiles: ["log"]
    image: grafana/loki:latest
    container_name: loki-stage
    environment:
      - MINIO_ROOT_PASSWORD
      - MINIO_ROOT_USER
    ports:
      - "3101:3100"
    volumes:
      - "$PWD/config/loki/loki-config-stage.yml:/etc/loki/loki-config.yml"
    command: -config.file=/etc/loki/loki-config.yml -config.expand-env=true

  loki-aws:
    profiles: ["log"]
    image: grafana/loki:latest
    container_name: loki-aws
    environment:
      - MINIO_ROOT_PASSWORD
      - MINIO_ROOT_USER
    ports:
      - "3100:3100"
    volumes:
      - "$PWD/config/loki/loki-config-aws.yml:/etc/loki/loki-config.yml"
    command: -config.file=/etc/loki/loki-config.yml -config.expand-env=true

  prometheus:
    profiles: ["metric"]
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - "$PWD/config/prometheus/prometheus-config.yml:/etc/prometheus/prometheus-config.yml"
      - prometheus_data_volume:/prometheus
    command: 
      - '--config.file=/etc/prometheus/prometheus-config.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-remote-write-receiver'
    
  tempo:
    profiles: ["trace"]
    image: grafana/tempo:latest
    container_name: tempo
    environment:
      - MINIO_ROOT_PASSWORD
      - MINIO_ROOT_USER
    ports:
      - "3200:3200"   # tempo
      - "4317:4317"   # otlp grpc
      - "4318:4318"   # otlp http
    volumes:
      - $PWD/config/tempo/tempo.yml:/etc/tempo.yml
    command: 
      - "-config.file=/etc/tempo.yml"
      - "-config.expand-env=true" 
    depends_on:
      - minio

  grafana:
    profiles: ["log", "metric", "trace"]
    image: grafana/grafana:latest
    env_file:
      - .env
    container_name: grafana
    restart:
      unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - "grafana_storage:/var/lib/grafana"
      - "$PWD/config/grafana/grafana.ini:/etc/grafana/grafana.ini"

volumes:
  grafana_storage: {}
  minio_data_volume:
  prometheus_data_volume:
